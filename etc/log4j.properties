# log4j configuration file that outputs to System.out.  The output
# information consists of relative time, log level, thread name,
# logger name, nested diagnostic context and the message in that order.

# Example of conversion patterns uses format specifiers...
#log4j.appender.A1.layout.ConversionPattern=%x %-5p [%c{3}] - %m%n
#log4j.appender.A1.layout.ConversionPattern=%d %-5p [%t] [%c] (%F:%L) - %m%n

log4j.rootLogger=info,R,stdout

log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=/var/opt/MI/traces/Gpx.log

log4j.appender.R.MaxFileSize=10000KB
log4j.appender.R.MaxBackupIndex=10

log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.R.layout.ConversionPattern=%d %-5p - %F:%-4L - %m%n

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %-5p - %F:%-4L - %m%n

# Set level @ functionality == class
log4j.logger.Gpx.Main=info
log4j.logger.Gpx.Configuration=info
log4j.logger.Gpx.Record=info
log4j.logger.Gpx.Period=info
log4j.logger.Gpx.Xml=info
log4j.logger.Misc.Formater=info

